#*
 *  Copyright (C) 2021 The Spanish Trainset
 *  Based on The Dutch Trainset 2 files and NewGRF build framework
 *  This file is part of The Spanish Transet
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *#
// *** ${id} ***
// AUTOGENERATED - DON'T EDIT THE OUTPUT PNML FILE

#parse("src/lib_graphics.vm")

// Purchase
#pucharseSprite("steam", $id, "garrafeta/garrafeta_engine")

// Engine animation
#animatedSpriteSets("steam", "${id}_pre", "garrafeta/garrafeta_pre", $length, $animationFrames)
#engineSpriteSet("steam", "${id}_engine", "garrafeta/garrafeta_engine", $length)
#animatedSpriteSets("steam", "${id}_post", "garrafeta/garrafeta_post", $length, $animationFrames)

// Animation states of the engine

switch(FEAT_TRAINS, SELF, switch_steam_${id}_pre_animation, motion_counter % 4){
#foreach ($frame in [0..3])
  ${frame}: spriteset_steam_${id}_pre_ani_${frame};##
#end

  spriteset_steam_${id}_pre_ani_3;
}

switch(FEAT_TRAINS, SELF, switch_steam_${id}_post_animation, motion_counter % 4){
#foreach ($frame in [0..3])
  ${frame}: spriteset_steam_${id}_post_ani_${frame};##
#end

  spriteset_steam_${id}_post_ani_3;
}

//= Callbacks

// Chain the tender
switch(FEAT_TRAINS, SELF, switch_steam_${id}_position, (position_in_vehid_chain % 3)) {
  0: switch_steam_${id}_pre_animation;
  1: spriteset_steam_${id}_engine;
  2: switch_steam_${id}_post_animation;
  spriteset_steam_${id}_engine;
}

// Sets the articulation
switch(FEAT_TRAINS, SELF, switch_steam_${id}_articulated, extra_callback_info1) {
  1: return item_steam_${id};
  2: return item_steam_${id};
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Sets the length of each articulation
switch(FEAT_TRAINS, SELF, switch_steam_${id}_length, position_in_vehid_chain % 3) {
  0: 5;
  1: 7; // Engine
  2: 5;
  7;
}

// Visual effect of smoke
switch(FEAT_TRAINS, SELF, switch_steam_${id}_visual_effect_and_powered, (position_in_vehid_chain % 3)) {
  0: return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
  1: return visual_effect_and_powered(VISUAL_EFFECT_STEAM, ${effect}, DISABLE_WAGON_POWER);
  2: return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
  return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

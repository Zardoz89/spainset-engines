#*
 *  Copyright (C) 2021 Luis Panadero Guarde√±o
 *  Based on The Dutch Trainset 2 files and NewGRF build framework
 *  This file is part of The Spanish Transet - Steam engines
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *#
// *** ${id} ***
// AUTOGENERATED - DON'T EDIT THE OUTPUT PNML FILE

// Pucharse
spriteset (spriteset_steam_${id}_purchase, "gfx/${imageFile}") {
  template_purchase(1, 223)
}

#set($animationFramesMinusOne = $animationFrames - 1)
// Engine animation
#foreach ($frame in [0..$animationFramesMinusOne])#set($yPos = $frame*32)#if ($yPos == 0)#set($yPos = 1)#end
spriteset(spriteset_steam_${id}_ani_${frame}, "gfx/${imageFile}") {
  template_2cc_78(1, ${yPos})
}
#end

// Tender
spriteset(spriteset_steam_${id}_tender, "gfx/${imageFile}") {
  template_2cc_38(1, 192)
}

// Animation states of the engine
switch(FEAT_TRAINS, SELF, switch_steam_${id}_animation, motion_counter % ${animationFrames}){
#foreach ($frame in [0..$animationFramesMinusOne])
  ${frame}: spriteset_steam_${id}_ani_${frame};##
#end

  spriteset_steam_${id}_ani_${animationFramesMinusOne};
}

//= Callbacks

// Chain the tender
switch(FEAT_TRAINS, SELF, switch_steam_${id}_position, (position_in_vehid_chain % 2)) {
  1: spriteset_steam_${id}_tender;
  switch_steam_${id}_animation;
}

// Articulated callback
switch(FEAT_TRAINS, SELF, switch_steam_${id}_articulated, extra_callback_info1) {
  1: return item_steam_${id};
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Control the tender length
switch(FEAT_TRAINS, SELF, switch_steam_${id}_length, position_in_vehid_chain % 2) {
  0: ${length};
  ## Engine length
  ${tenderLength};
  ## Tender length
}

